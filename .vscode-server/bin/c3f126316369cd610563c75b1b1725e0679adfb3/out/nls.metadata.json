{
	"keys": {
		"vs/platform/environment/node/argv": [
			"optionsUpperCase",
			"extensionsManagement",
			"troubleshooting",
			"diff",
			"add",
			"goto",
			"newWindow",
			"reuseWindow",
			"wait",
			"locale",
			"userDataDir",
			"help",
			"extensionHomePath",
			"listExtensions",
			"showVersions",
			"category",
			"installExtension",
			"uninstallExtension",
			"experimentalApis",
			"version",
			"verbose",
			"log",
			"status",
			"prof-startup",
			"disableExtensions",
			"disableExtension",
			"turn sync",
			"inspect-extensions",
			"inspect-brk-extensions",
			"disableGPU",
			"maxMemory",
			"telemetry",
			"usage",
			"options",
			"paths",
			"stdinWindows",
			"stdinUnix",
			"unknownVersion",
			"unknownCommit"
		],
		"vs/server/serverEnvironmentService": [
			"connection-secret"
		],
		"vs/platform/request/common/request": [
			"httpConfigurationTitle",
			"proxy",
			"strictSSL",
			"proxyAuthorization",
			"proxySupportOff",
			"proxySupportOn",
			"proxySupportFallback",
			"proxySupportOverride",
			"proxySupport",
			"systemCertificates"
		],
		"vs/platform/extensionManagement/common/extensionManagement": [
			"extensions",
			"preferences"
		],
		"vs/platform/extensionManagement/node/extensionManagementService": [
			"incompatible",
			"restartCode",
			"restartCode",
			"MarketPlaceDisabled",
			"malicious extension",
			"notFoundCompatibleDependency",
			"MarketPlaceDisabled",
			"Not a Marketplace extension",
			"removeError",
			"quitCode",
			"exitCode",
			"notInstalled",
			"singleDependentError",
			"twoDependentsError",
			"multipleDependentsError",
			"singleIndirectDependentError",
			"twoIndirectDependentsError",
			"multipleIndirectDependentsError",
			"notExists"
		],
		"vs/platform/files/common/fileService": [
			"invalidPath",
			"noProviderFound",
			"fileNotFoundError",
			"fileExists",
			"err.write",
			"writeFailedUnlockUnsupported",
			"fileIsDirectoryWriteError",
			"fileModifiedError",
			"err.read",
			"err.read",
			"err.read",
			"fileIsDirectoryReadError",
			"fileNotModifiedError",
			"fileTooLargeError",
			"unableToMoveCopyError1",
			"unableToMoveCopyError2",
			"unableToMoveCopyError3",
			"unableToMoveCopyError4",
			"mkdirExistsError",
			"deleteFailedTrashUnsupported",
			"deleteFailedNotFound",
			"deleteFailedNonEmptyFolder",
			"err.readonly",
			"err.readonly"
		],
		"vs/platform/files/node/diskFileSystemProvider": [
			"fileExists",
			"fileNotExists",
			"moveError",
			"copyError",
			"fileCopyErrorPathCase",
			"fileCopyErrorExists"
		],
		"vs/platform/files/common/files": [
			"unknownError",
			"sizeB",
			"sizeKB",
			"sizeMB",
			"sizeGB",
			"sizeTB"
		],
		"vs/platform/extensionManagement/common/extensionManagementCLIService": [
			"notFound",
			"useId",
			"listFromLocation",
			"installingExtensionsOnLocation",
			"installingExtensions",
			"alreadyInstalled-checkAndUpdate",
			"alreadyInstalled",
			"installation failed",
			"successVsixInstall",
			"cancelVsixInstall",
			"alreadyInstalled",
			"updateMessage",
			"installing builtin with version",
			"installing builtin ",
			"installing with version",
			"installing",
			"successInstall",
			"cancelInstall",
			"forceDowngrade",
			"builtin",
			"forceUninstall",
			"uninstalling",
			"successUninstallFromLocation",
			"successUninstall",
			"notInstalleddOnLocation",
			"notInstalled"
		],
		"vs/platform/telemetry/common/telemetryService": [
			"telemetryConfigurationTitle",
			"telemetry.enableTelemetry",
			"telemetry.enableTelemetryMd"
		],
		"vs/server/remoteAgentEnvironmentImpl": [
			"overwritingExtension"
		],
		"vs/base/node/processes": [
			"TaskRunner.UNC"
		],
		"vs/editor/common/config/editorOptions": [
			"accessibilitySupport.auto",
			"accessibilitySupport.on",
			"accessibilitySupport.off",
			"accessibilitySupport",
			"comments.insertSpace",
			"comments.ignoreEmptyLines",
			"emptySelectionClipboard",
			"find.cursorMoveOnType",
			"find.seedSearchStringFromSelection",
			"editor.find.autoFindInSelection.never",
			"editor.find.autoFindInSelection.always",
			"editor.find.autoFindInSelection.multiline",
			"find.autoFindInSelection",
			"find.globalFindClipboard",
			"find.addExtraSpaceOnTop",
			"find.loop",
			"fontLigatures",
			"fontFeatureSettings",
			"fontLigaturesGeneral",
			"fontSize",
			"fontWeightErrorMessage",
			"fontWeight",
			"editor.gotoLocation.multiple.peek",
			"editor.gotoLocation.multiple.gotoAndPeek",
			"editor.gotoLocation.multiple.goto",
			"editor.gotoLocation.multiple.deprecated",
			"editor.editor.gotoLocation.multipleDefinitions",
			"editor.editor.gotoLocation.multipleTypeDefinitions",
			"editor.editor.gotoLocation.multipleDeclarations",
			"editor.editor.gotoLocation.multipleImplemenattions",
			"editor.editor.gotoLocation.multipleReferences",
			"alternativeDefinitionCommand",
			"alternativeTypeDefinitionCommand",
			"alternativeDeclarationCommand",
			"alternativeImplementationCommand",
			"alternativeReferenceCommand",
			"hover.enabled",
			"hover.delay",
			"hover.sticky",
			"codeActions",
			"inlayHints.enable",
			"inlayHints.fontSize",
			"inlayHints.fontFamily",
			"lineHeight",
			"minimap.enabled",
			"minimap.size.proportional",
			"minimap.size.fill",
			"minimap.size.fit",
			"minimap.size",
			"minimap.side",
			"minimap.showSlider",
			"minimap.scale",
			"minimap.renderCharacters",
			"minimap.maxColumn",
			"padding.top",
			"padding.bottom",
			"parameterHints.enabled",
			"parameterHints.cycle",
			"quickSuggestions.strings",
			"quickSuggestions.comments",
			"quickSuggestions.other",
			"quickSuggestions",
			"lineNumbers.off",
			"lineNumbers.on",
			"lineNumbers.relative",
			"lineNumbers.interval",
			"lineNumbers",
			"rulers.size",
			"rulers.color",
			"rulers",
			"scrollbar.vertical.auto",
			"scrollbar.vertical.visible",
			"scrollbar.vertical.fit",
			"scrollbar.vertical",
			"scrollbar.horizontal.auto",
			"scrollbar.horizontal.visible",
			"scrollbar.horizontal.fit",
			"scrollbar.horizontal",
			"scrollbar.verticalScrollbarSize",
			"scrollbar.horizontalScrollbarSize",
			"scrollbar.scrollByPage",
			"inlineSuggest.enabled",
			"inlineSuggest.mode.prefix",
			"inlineSuggest.mode.subwordDiff",
			"inlineSuggest.mode",
			"suggest.insertMode.insert",
			"suggest.insertMode.replace",
			"suggest.insertMode",
			"suggest.filterGraceful",
			"suggest.localityBonus",
			"suggest.shareSuggestSelections",
			"suggest.snippetsPreventQuickSuggestions",
			"suggest.showIcons",
			"suggest.showStatusBar",
			"suggest.preview",
			"suggest.previewMode.prefix",
			"suggest.previewMode.subwordDiff",
			"suggest.previewMode",
			"suggest.showInlineDetails",
			"suggest.maxVisibleSuggestions.dep",
			"deprecated",
			"editor.suggest.showMethods",
			"editor.suggest.showFunctions",
			"editor.suggest.showConstructors",
			"editor.suggest.showDeprecated",
			"editor.suggest.showFields",
			"editor.suggest.showVariables",
			"editor.suggest.showClasss",
			"editor.suggest.showStructs",
			"editor.suggest.showInterfaces",
			"editor.suggest.showModules",
			"editor.suggest.showPropertys",
			"editor.suggest.showEvents",
			"editor.suggest.showOperators",
			"editor.suggest.showUnits",
			"editor.suggest.showValues",
			"editor.suggest.showConstants",
			"editor.suggest.showEnums",
			"editor.suggest.showEnumMembers",
			"editor.suggest.showKeywords",
			"editor.suggest.showTexts",
			"editor.suggest.showColors",
			"editor.suggest.showFiles",
			"editor.suggest.showReferences",
			"editor.suggest.showCustomcolors",
			"editor.suggest.showFolders",
			"editor.suggest.showTypeParameters",
			"editor.suggest.showSnippets",
			"editor.suggest.showUsers",
			"editor.suggest.showIssues",
			"selectLeadingAndTrailingWhitespace",
			"acceptSuggestionOnCommitCharacter",
			"acceptSuggestionOnEnterSmart",
			"acceptSuggestionOnEnter",
			"accessibilityPageSize",
			"editorViewAccessibleLabel",
			"editor.autoClosingBrackets.languageDefined",
			"editor.autoClosingBrackets.beforeWhitespace",
			"autoClosingBrackets",
			"editor.autoClosingDelete.auto",
			"autoClosingDelete",
			"editor.autoClosingOvertype.auto",
			"autoClosingOvertype",
			"editor.autoClosingQuotes.languageDefined",
			"editor.autoClosingQuotes.beforeWhitespace",
			"autoClosingQuotes",
			"editor.autoIndent.none",
			"editor.autoIndent.keep",
			"editor.autoIndent.brackets",
			"editor.autoIndent.advanced",
			"editor.autoIndent.full",
			"autoIndent",
			"editor.autoSurround.languageDefined",
			"editor.autoSurround.quotes",
			"editor.autoSurround.brackets",
			"autoSurround",
			"stickyTabStops",
			"codeLens",
			"codeLensFontFamily",
			"codeLensFontSize",
			"colorDecorators",
			"columnSelection",
			"copyWithSyntaxHighlighting",
			"cursorBlinking",
			"cursorSmoothCaretAnimation",
			"cursorStyle",
			"cursorSurroundingLines",
			"cursorSurroundingLinesStyle.default",
			"cursorSurroundingLinesStyle.all",
			"cursorSurroundingLinesStyle",
			"cursorWidth",
			"dragAndDrop",
			"fastScrollSensitivity",
			"folding",
			"foldingStrategy.auto",
			"foldingStrategy.indentation",
			"foldingStrategy",
			"foldingHighlight",
			"unfoldOnClickAfterEndOfLine",
			"fontFamily",
			"formatOnPaste",
			"formatOnType",
			"glyphMargin",
			"hideCursorInOverviewRuler",
			"highlightActiveIndentGuide",
			"letterSpacing",
			"linkedEditing",
			"links",
			"matchBrackets",
			"mouseWheelScrollSensitivity",
			"mouseWheelZoom",
			"multiCursorMergeOverlapping",
			"multiCursorModifier.ctrlCmd",
			"multiCursorModifier.alt",
			{
				"key": "multiCursorModifier",
				"comment": [
					"- `ctrlCmd` refers to a value the setting can take and should not be localized.",
					"- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized."
				]
			},
			"multiCursorPaste.spread",
			"multiCursorPaste.full",
			"multiCursorPaste",
			"occurrencesHighlight",
			"overviewRulerBorder",
			"peekWidgetDefaultFocus.tree",
			"peekWidgetDefaultFocus.editor",
			"peekWidgetDefaultFocus",
			"definitionLinkOpensInPeek",
			"quickSuggestionsDelay",
			"renameOnType",
			"renameOnTypeDeprecate",
			"renderControlCharacters",
			"renderIndentGuides",
			"renderFinalNewline",
			"renderLineHighlight.all",
			"renderLineHighlight",
			"renderLineHighlightOnlyWhenFocus",
			"renderWhitespace.boundary",
			"renderWhitespace.selection",
			"renderWhitespace.trailing",
			"renderWhitespace",
			"roundedSelection",
			"scrollBeyondLastColumn",
			"scrollBeyondLastLine",
			"scrollPredominantAxis",
			"selectionClipboard",
			"selectionHighlight",
			"showFoldingControls.always",
			"showFoldingControls.mouseover",
			"showFoldingControls",
			"showUnused",
			"showDeprecated",
			"snippetSuggestions.top",
			"snippetSuggestions.bottom",
			"snippetSuggestions.inline",
			"snippetSuggestions.none",
			"snippetSuggestions",
			"smoothScrolling",
			"suggestFontSize",
			"suggestLineHeight",
			"suggestOnTriggerCharacters",
			"suggestSelection.first",
			"suggestSelection.recentlyUsed",
			"suggestSelection.recentlyUsedByPrefix",
			"suggestSelection",
			"tabCompletion.on",
			"tabCompletion.off",
			"tabCompletion.onlySnippets",
			"tabCompletion",
			"unusualLineTerminators.auto",
			"unusualLineTerminators.off",
			"unusualLineTerminators.prompt",
			"unusualLineTerminators",
			"useTabStops",
			"wordSeparators",
			"wordWrap.off",
			"wordWrap.on",
			{
				"key": "wordWrap.wordWrapColumn",
				"comment": [
					"- `editor.wordWrapColumn` refers to a different setting and should not be localized."
				]
			},
			{
				"key": "wordWrap.bounded",
				"comment": [
					"- viewport means the edge of the visible window size.",
					"- `editor.wordWrapColumn` refers to a different setting and should not be localized."
				]
			},
			{
				"key": "wordWrap",
				"comment": [
					"- 'off', 'on', 'wordWrapColumn' and 'bounded' refer to values the setting can take and should not be localized.",
					"- `editor.wordWrapColumn` refers to a different setting and should not be localized."
				]
			},
			{
				"key": "wordWrapColumn",
				"comment": [
					"- `editor.wordWrap` refers to a different setting and should not be localized.",
					"- 'wordWrapColumn' and 'bounded' refer to values the different setting can take and should not be localized."
				]
			},
			"wrappingIndent.none",
			"wrappingIndent.same",
			"wrappingIndent.indent",
			"wrappingIndent.deepIndent",
			"wrappingIndent",
			"wrappingStrategy.simple",
			"wrappingStrategy.advanced",
			"wrappingStrategy"
		],
		"vs/platform/terminal/node/terminalProcess": [
			"launchFail.cwdNotDirectory",
			"launchFail.cwdDoesNotExist",
			"launchFail.executableIsNotFileOrSymlink",
			"launchFail.executableDoesNotExist"
		],
		"vs/base/common/errorMessage": [
			"stackTrace.format",
			"nodeExceptionMessage",
			"error.defaultMessage",
			"error.defaultMessage",
			"error.moreErrors",
			"error.defaultMessage"
		],
		"vs/platform/configuration/common/configurationRegistry": [
			"defaultLanguageConfigurationOverrides.title",
			"defaultLanguageConfiguration.description",
			"overrideSettings.defaultDescription",
			"overrideSettings.errorMessage",
			"config.property.empty",
			"config.property.languageDefault",
			"config.property.duplicate"
		],
		"vs/platform/extensions/common/extensionValidator": [
			"versionSyntax",
			"versionSpecificity1",
			"versionSpecificity2",
			"versionMismatch"
		],
		"vs/base/node/zip": [
			"invalid file",
			"incompleteExtract",
			"notFound"
		],
		"vs/platform/extensionManagement/node/extensionManagementUtil": [
			"invalidManifest"
		],
		"vs/platform/extensionManagement/node/extensionsScanner": [
			"errorDeleting",
			"cannot read",
			"cannot read",
			"renameError",
			"invalidManifest"
		],
		"vs/platform/files/common/io": [
			"fileTooLargeForHeapError",
			"fileTooLargeError"
		],
		"vs/workbench/services/extensions/node/extensionPoints": [
			"jsonParseInvalidType",
			"jsonParseFail",
			"fileReadFail",
			"jsonsParseReportErrors",
			"jsonInvalidFormat",
			"missingNLSKey",
			"notSemver",
			"extensionDescription.empty",
			"extensionDescription.publisher",
			"extensionDescription.name",
			"extensionDescription.version",
			"extensionDescription.engines",
			"extensionDescription.engines.vscode",
			"extensionDescription.extensionDependencies",
			"extensionDescription.activationEvents1",
			"extensionDescription.activationEvents2",
			"extensionDescription.main1",
			"extensionDescription.main2",
			"extensionDescription.main3",
			"extensionDescription.browser1",
			"extensionDescription.browser2",
			"extensionDescription.browser3"
		],
		"vs/workbench/services/configurationResolver/common/variableResolver": [
			"canNotResolveFile",
			"canNotResolveFolderForFile",
			"canNotFindFolder",
			"canNotResolveWorkspaceFolderMultiRoot",
			"canNotResolveWorkspaceFolder",
			"missingEnvVarName",
			"configNotFound",
			"configNoString",
			"missingConfigName",
			"canNotResolveLineNumber",
			"canNotResolveSelectedText",
			"noValueForCommand"
		],
		"vs/workbench/common/editor": [
			"promptOpenWith.defaultEditor.displayName",
			"builtinProviderDisplayName",
			"activeEditorIsDirty",
			"activeEditorIsNotPreview",
			"activeEditorIsPinned",
			"activeEditorIsReadonly",
			"activeEditorCanRevert",
			"activeEditor",
			"activeEditorAvailableEditorIds",
			"textCompareEditorVisible",
			"textCompareEditorActive",
			"groupEditorsCount",
			"activeEditorGroupEmpty",
			"activeEditorGroupIndex",
			"activeEditorGroupLast",
			"multipleEditorGroups",
			"editorIsOpen",
			"inZenMode",
			"isCenteredLayout",
			"splitEditorsVertically",
			"editorAreaVisible"
		],
		"vs/platform/terminal/common/terminalPlatformConfiguration": [
			"terminalProfile.args",
			"terminalProfile.overrideName",
			"terminalProfile.icon",
			"terminalProfile.color",
			"terminalProfile.env",
			"terminalProfile.path",
			"terminal.integrated.shell.linux.deprecation",
			"terminal.integrated.shell.osx.deprecation",
			"terminal.integrated.shell.windows.deprecation",
			"terminalIntegratedConfigurationTitle",
			{
				"key": "terminal.integrated.automationShell.linux",
				"comment": [
					"{0} and {1} are the `shell` and `shellArgs` settings keys"
				]
			},
			{
				"key": "terminal.integrated.automationShell.osx",
				"comment": [
					"{0} and {1} are the `shell` and `shellArgs` settings keys"
				]
			},
			{
				"key": "terminal.integrated.automationShell.windows",
				"comment": [
					"{0} and {1} are the `shell` and `shellArgs` settings keys"
				]
			},
			"terminal.integrated.shell.linux",
			"terminal.integrated.shell.osx",
			"terminal.integrated.shell.windows",
			"terminal.integrated.shellArgs.linux",
			"terminal.integrated.shellArgs.osx",
			"terminal.integrated.shellArgs.windows",
			"terminal.integrated.shellArgs.windows",
			"terminal.integrated.shellArgs.windows.string",
			{
				"key": "terminal.integrated.profiles.windows",
				"comment": [
					"{0}, {1}, and {2} are the `source`, `path` and optional `args` settings keys"
				]
			},
			"terminalProfile.windowsSource",
			{
				"key": "terminal.integrated.profile.osx",
				"comment": [
					"{0} and {1} are the `path` and optional `args` settings keys"
				]
			},
			{
				"key": "terminal.integrated.profile.linux",
				"comment": [
					"{0} and {1} are the `path` and optional `args` settings keys"
				]
			},
			"terminal.integrated.useWslProfiles",
			"terminal.integrated.inheritEnv",
			"terminal.integrated.showLinkHover",
			"terminalIntegratedConfigurationTitle",
			"terminal.integrated.defaultProfile.linux",
			"terminal.integrated.defaultProfile.osx",
			"terminal.integrated.defaultProfile.windows"
		],
		"vs/workbench/api/common/extHostExtensionService": [
			"extensionTestError1",
			"extensionTestError"
		],
		"vs/workbench/api/common/extHostTerminalService": [
			"launchFail.idMissingOnExtHost"
		],
		"vs/workbench/api/common/extHostWorkspace": [
			"updateerror"
		],
		"vs/workbench/api/node/extHostDebugService": [
			"debug.terminal.title"
		],
		"vs/platform/environment/node/argvHelper": [
			"unknownOption",
			"multipleValues",
			"gotoValidation"
		],
		"vs/base/common/date": [
			"date.fromNow.in",
			"date.fromNow.now",
			"date.fromNow.seconds.singular.ago",
			"date.fromNow.seconds.plural.ago",
			"date.fromNow.seconds.singular",
			"date.fromNow.seconds.plural",
			"date.fromNow.minutes.singular.ago",
			"date.fromNow.minutes.plural.ago",
			"date.fromNow.minutes.singular",
			"date.fromNow.minutes.plural",
			"date.fromNow.hours.singular.ago",
			"date.fromNow.hours.plural.ago",
			"date.fromNow.hours.singular",
			"date.fromNow.hours.plural",
			"date.fromNow.days.singular.ago",
			"date.fromNow.days.plural.ago",
			"date.fromNow.days.singular",
			"date.fromNow.days.plural",
			"date.fromNow.weeks.singular.ago",
			"date.fromNow.weeks.plural.ago",
			"date.fromNow.weeks.singular",
			"date.fromNow.weeks.plural",
			"date.fromNow.months.singular.ago",
			"date.fromNow.months.plural.ago",
			"date.fromNow.months.singular",
			"date.fromNow.months.plural",
			"date.fromNow.years.singular.ago",
			"date.fromNow.years.plural.ago",
			"date.fromNow.years.singular",
			"date.fromNow.years.plural"
		],
		"vs/base/common/jsonErrorMessages": [
			"error.invalidSymbol",
			"error.invalidNumberFormat",
			"error.propertyNameExpected",
			"error.valueExpected",
			"error.colonExpected",
			"error.commaExpected",
			"error.closeBraceExpected",
			"error.closeBracketExpected",
			"error.endOfFileExpected"
		],
		"vs/platform/workspaces/common/workspaces": [
			"codeWorkspace"
		],
		"vs/workbench/contrib/tasks/common/taskService": [
			"tasks.customExecutionSupported",
			"tasks.shellExecutionSupported",
			"tasks.processExecutionSupported"
		],
		"vs/workbench/contrib/debug/common/abstractDebugAdapter": [
			"timeout"
		],
		"vs/workbench/contrib/debug/node/debugAdapter": [
			"debugAdapterBinNotFound",
			{
				"key": "debugAdapterCannotDetermineExecutable",
				"comment": [
					"Adapter executable file not found"
				]
			},
			"unableToLaunchDebugAdapter",
			"unableToLaunchDebugAdapterNoArgs"
		],
		"vs/workbench/contrib/search/common/queryBuilder": [
			"search.noWorkspaceWithName"
		],
		"vs/platform/markers/common/markers": [
			"sev.error",
			"sev.warning",
			"sev.info"
		],
		"vs/platform/externalTerminal/node/externalTerminalService": [
			"console.title",
			"mac.terminal.script.failed",
			"mac.terminal.type.not.supported",
			"press.any.key",
			"linux.term.failed",
			"ext.term.app.not.found"
		],
		"vs/workbench/api/common/extHostDiagnostics": [
			{
				"key": "limitHit",
				"comment": [
					"amount of errors/warning skipped due to limits"
				]
			}
		],
		"vs/workbench/api/common/extHostProgress": [
			"extensionSource"
		],
		"vs/workbench/api/common/extHostStatusBar": [
			"extensionLabel",
			"status.extensionMessage"
		],
		"vs/workbench/api/common/extHostTreeViews": [
			"treeView.notRegistered",
			"treeView.notRegistered",
			"treeView.notRegistered",
			"treeView.notRegistered",
			"treeView.notRegistered",
			"treeView.notRegistered",
			"treeView.notRegistered",
			"treeView.duplicateElement"
		]
	},
	"messages": {
		"vs/platform/environment/node/argv": [
			"Options",
			"Extensions Management",
			"Troubleshooting",
			"Compare two files with each other.",
			"Add folder(s) to the last active window.",
			"Open a file at the path on the specified line and character position.",
			"Force to open a new window.",
			"Force to open a file or folder in an already opened window.",
			"Wait for the files to be closed before returning.",
			"The locale to use (e.g. en-US or zh-TW).",
			"Specifies the directory that user data is kept in. Can be used to open multiple distinct instances of Code.",
			"Print usage.",
			"Set the root path for extensions.",
			"List the installed extensions.",
			"Show versions of installed extensions, when using --list-extensions.",
			"Filters installed extensions by provided category, when using --list-extensions.",
			"Installs or updates the extension. The identifier of an extension is always `${publisher}.${name}`. Use `--force` argument to update to latest version. To install a specific version provide `@${version}`. For example: 'vscode.csharp@1.2.3'.",
			"Uninstalls an extension.",
			"Enables proposed API features for extensions. Can receive one or more extension IDs to enable individually.",
			"Print version.",
			"Print verbose output (implies --wait).",
			"Log level to use. Default is 'info'. Allowed values are 'critical', 'error', 'warn', 'info', 'debug', 'trace', 'off'.",
			"Print process usage and diagnostics information.",
			"Run CPU profiler during startup.",
			"Disable all installed extensions.",
			"Disable an extension.",
			"Turn sync on or off.",
			"Allow debugging and profiling of extensions. Check the developer tools for the connection URI.",
			"Allow debugging and profiling of extensions with the extension host being paused after start. Check the developer tools for the connection URI.",
			"Disable GPU hardware acceleration.",
			"Max memory size for a window (in Mbytes).",
			"Shows all telemetry events which VS code collects.",
			"Usage",
			"options",
			"paths",
			"To read output from another program, append '-' (e.g. 'echo Hello World | {0} -')",
			"To read from stdin, append '-' (e.g. 'ps aux | grep code | {0} -')",
			"Unknown version",
			"Unknown commit"
		],
		"vs/server/serverEnvironmentService": [
			"Path to file that contains the connection token. This will require that all incoming connections know the secret."
		],
		"vs/platform/request/common/request": [
			"HTTP",
			"The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.",
			"Controls whether the proxy server certificate should be verified against the list of supplied CAs.",
			"The value to send as the `Proxy-Authorization` header for every network request.",
			"Disable proxy support for extensions.",
			"Enable proxy support for extensions.",
			"Enable proxy support for extensions, fall back to request options, when no proxy found.",
			"Enable proxy support for extensions, override request options.",
			"Use the proxy support for extensions.",
			"Controls whether CA certificates should be loaded from the OS. (On Windows and macOS, a reload of the window is required after turning this off.)"
		],
		"vs/platform/extensionManagement/common/extensionManagement": [
			"Extensions",
			"Preferences"
		],
		"vs/platform/extensionManagement/node/extensionManagementService": [
			"Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.",
			"Please restart VS Code before reinstalling {0}.",
			"Please restart VS Code before reinstalling {0}.",
			"Marketplace is not enabled",
			"Can't install extension since it was reported to be problematic.",
			"Unable to install '{0}' extension because it is not compatible with the current version of VS Code (version {1}).",
			"Marketplace is not enabled",
			"Only Marketplace Extensions can be reinstalled",
			"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.",
			"Unable to install the extension. Please Quit and Start VS Code before reinstalling.",
			"Unable to install the extension. Please Exit and Start VS Code before reinstalling.",
			"Extension '{0}' is not installed.",
			"Cannot uninstall '{0}' extension. '{1}' extension depends on this.",
			"Cannot uninstall '{0}' extension. '{1}' and '{2}' extensions depend on this.",
			"Cannot uninstall '{0}' extension. '{1}', '{2}' and other extension depend on this.",
			"Cannot uninstall '{0}' extension . It includes uninstalling '{1}' extension and '{2}' extension depends on this.",
			"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}' and '{3}' extensions depend on this.",
			"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}', '{3}' and other extensions depend on this.",
			"Could not find extension"
		],
		"vs/platform/files/common/fileService": [
			"Unable to resolve filesystem provider with relative file path '{0}'",
			"No file system provider found for resource '{0}'",
			"Unable to resolve non-existing file '{0}'",
			"Unable to create file '{0}' that already exists when overwrite flag is not set",
			"Unable to write file '{0}' ({1})",
			"Unable to unlock file '{0}' because provider does not support it.",
			"Unable to write file '{0}' that is actually a directory",
			"File Modified Since",
			"Unable to read file '{0}' ({1})",
			"Unable to read file '{0}' ({1})",
			"Unable to read file '{0}' ({1})",
			"Unable to read file '{0}' that is actually a directory",
			"File not modified since",
			"Unable to read file '{0}' that is too large to open",
			"Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system",
			"Unable to move/copy when source '{0}' is parent of target '{1}'.",
			"Unable to move/copy '{0}' because target '{1}' already exists at destination.",
			"Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.",
			"Unable to create folder '{0}' that already exists but is not a directory",
			"Unable to delete file '{0}' via trash because provider does not support it.",
			"Unable to delete non-existing file '{0}'",
			"Unable to delete non-empty folder '{0}'.",
			"Unable to modify readonly file '{0}'",
			"Unable to modify readonly file '{0}'"
		],
		"vs/platform/files/node/diskFileSystemProvider": [
			"File already exists",
			"File does not exist",
			"Unable to move '{0}' into '{1}' ({2}).",
			"Unable to copy '{0}' into '{1}' ({2}).",
			"'File cannot be copied to same path with different path case",
			"File at target already exists"
		],
		"vs/platform/files/common/files": [
			"Unknown Error",
			"{0}B",
			"{0}KB",
			"{0}MB",
			"{0}GB",
			"{0}TB"
		],
		"vs/platform/extensionManagement/common/extensionManagementCLIService": [
			"Extension '{0}' not found.",
			"Make sure you use the full extension ID, including the publisher, e.g.: {0}",
			"Extensions installed on {0}:",
			"Installing extensions on {0}...",
			"Installing extensions...",
			"Extension '{0}' v{1} is already installed. Use '--force' option to update to latest version or provide '@<version>' to install a specific version, for example: '{2}@1.2.3'.",
			"Extension '{0}' is already installed.",
			"Failed Installing Extensions: {0}",
			"Extension '{0}' was successfully installed.",
			"Cancelled installing extension '{0}'.",
			"Extension '{0}' is already installed.",
			"Updating the extension '{0}' to the version {1}",
			"Installing builtin extension '{0}' v{1}...",
			"Installing builtin extension '{0}'...",
			"Installing extension '{0}' v{1}...",
			"Installing extension '{0}'...",
			"Extension '{0}' v{1} was successfully installed.",
			"Cancelled installing extension '{0}'.",
			"A newer version of extension '{0}' v{1} is already installed. Use '--force' option to downgrade to older version.",
			"Extension '{0}' is a Built-in extension and cannot be uninstalled",
			"Extension '{0}' is marked as a Built-in extension by user. Please use '--force' option to uninstall it.",
			"Uninstalling {0}...",
			"Extension '{0}' was successfully uninstalled from {1}!",
			"Extension '{0}' was successfully uninstalled!",
			"Extension '{0}' is not installed on {1}.",
			"Extension '{0}' is not installed."
		],
		"vs/platform/telemetry/common/telemetryService": [
			"Telemetry",
			"Enable usage data and errors to be sent to a Microsoft online service.",
			"Enable usage data and errors to be sent to a Microsoft online service. Read our privacy statement [here]({0})."
		],
		"vs/server/remoteAgentEnvironmentImpl": [
			"Overwriting extension {0} with {1}."
		],
		"vs/base/node/processes": [
			"Can't execute a shell command on a UNC drive."
		],
		"vs/editor/common/config/editorOptions": [
			"The editor will use platform APIs to detect when a Screen Reader is attached.",
			"The editor will be permanently optimized for usage with a Screen Reader. Word wrapping will be disabled.",
			"The editor will never be optimized for usage with a Screen Reader.",
			"Controls whether the editor should run in a mode where it is optimized for screen readers. Setting to on will disable word wrapping.",
			"Controls whether a space character is inserted when commenting.",
			"Controls if empty lines should be ignored with toggle, add or remove actions for line comments.",
			"Controls whether copying without a selection copies the current line.",
			"Controls whether the cursor should jump to find matches while typing.",
			"Controls whether the search string in the Find Widget is seeded from the editor selection.",
			"Never turn on Find in selection automatically (default).",
			"Always turn on Find in selection automatically.",
			"Turn on Find in selection automatically when multiple lines of content are selected.",
			"Controls the condition for turning on find in selection automatically.",
			"Controls whether the Find Widget should read or modify the shared find clipboard on macOS.",
			"Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.",
			"Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found.",
			"Enables/Disables font ligatures ('calt' and 'liga' font features). Change this to a string for fine-grained control of the 'font-feature-settings' CSS property.",
			"Explicit 'font-feature-settings' CSS property. A boolean can be passed instead if one only needs to turn on/off ligatures.",
			"Configures font ligatures or font features. Can be either a boolean to enable/disable ligatures or a string for the value of the CSS 'font-feature-settings' property.",
			"Controls the font size in pixels.",
			"Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed.",
			"Controls the font weight. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
			"Show peek view of the results (default)",
			"Go to the primary result and show a peek view",
			"Go to the primary result and enable peek-less navigation to others",
			"This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.",
			"Controls the behavior the 'Go to Definition'-command when multiple target locations exist.",
			"Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.",
			"Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.",
			"Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.",
			"Controls the behavior the 'Go to References'-command when multiple target locations exist.",
			"Alternative command id that is being executed when the result of 'Go to Definition' is the current location.",
			"Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.",
			"Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.",
			"Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.",
			"Alternative command id that is being executed when the result of 'Go to Reference' is the current location.",
			"Controls whether the hover is shown.",
			"Controls the delay in milliseconds after which the hover is shown.",
			"Controls whether the hover should remain visible when mouse is moved over it.",
			"Enables the code action lightbulb in the editor.",
			"Enables the inlay hints in the editor.",
			"Controls font size of inlay hints in the editor. When set to `0`, the 90% of `#editor.fontSize#` is used.",
			"Controls font family of inlay hints in the editor.",
			"Controls the line height. \n - Use 0 to automatically compute the line height from the font size.\n - Values between 0 and 8 will be used as a multiplier with the font size.\n - Values greater than or equal to 8 will be used as effective values.",
			"Controls whether the minimap is shown.",
			"The minimap has the same size as the editor contents (and might scroll).",
			"The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling).",
			"The minimap will shrink as necessary to never be larger than the editor (no scrolling).",
			"Controls the size of the minimap.",
			"Controls the side where to render the minimap.",
			"Controls when the minimap slider is shown.",
			"Scale of content drawn in the minimap: 1, 2 or 3.",
			"Render the actual characters on a line as opposed to color blocks.",
			"Limit the width of the minimap to render at most a certain number of columns.",
			"Controls the amount of space between the top edge of the editor and the first line.",
			"Controls the amount of space between the bottom edge of the editor and the last line.",
			"Enables a pop-up that shows parameter documentation and type information as you type.",
			"Controls whether the parameter hints menu cycles or closes when reaching the end of the list.",
			"Enable quick suggestions inside strings.",
			"Enable quick suggestions inside comments.",
			"Enable quick suggestions outside of strings and comments.",
			"Controls whether suggestions should automatically show up while typing.",
			"Line numbers are not rendered.",
			"Line numbers are rendered as absolute number.",
			"Line numbers are rendered as distance in lines to cursor position.",
			"Line numbers are rendered every 10 lines.",
			"Controls the display of line numbers.",
			"Number of monospace characters at which this editor ruler will render.",
			"Color of this editor ruler.",
			"Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.",
			"The vertical scrollbar will be visible only when necessary.",
			"The vertical scrollbar will always be visible.",
			"The vertical scrollbar will always be hidden.",
			"Controls the visibility of the vertical scrollbar.",
			"The horizontal scrollbar will be visible only when necessary.",
			"The horizontal scrollbar will always be visible.",
			"The horizontal scrollbar will always be hidden.",
			"Controls the visibility of the horizontal scrollbar.",
			"The width of the vertical scrollbar.",
			"The height of the horizontal scrollbar.",
			"Controls whether clicks scroll by page or jump to click position.",
			"Controls whether to automatically show inline suggestions in the editor.",
			"Only render an inline suggestion if the replace text is a prefix of the insert text.",
			"Only render an inline suggestion if the replace text is a subword of the insert text.",
			"Controls which mode to use for rendering inline suggestions.",
			"Insert suggestion without overwriting text right of the cursor.",
			"Insert suggestion and overwrite text right of the cursor.",
			"Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.",
			"Controls whether filtering and sorting suggestions accounts for small typos.",
			"Controls whether sorting favors words that appear close to the cursor.",
			"Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).",
			"Controls whether an active snippet prevents quick suggestions.",
			"Controls whether to show or hide icons in suggestions.",
			"Controls the visibility of the status bar at the bottom of the suggest widget.",
			"Controls whether to preview the suggestion outcome in the editor.",
			"Only render a preview if the replace text is a prefix of the insert text.",
			"Only render a preview if the replace text is a subword of the insert text.",
			"Controls which mode to use for rendering the suggest preview.",
			"Controls whether suggest details show inline with the label or only in the details widget",
			"This setting is deprecated. The suggest widget can now be resized.",
			"This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.",
			"When enabled IntelliSense shows `method`-suggestions.",
			"When enabled IntelliSense shows `function`-suggestions.",
			"When enabled IntelliSense shows `constructor`-suggestions.",
			"When enabled IntelliSense shows `deprecated`-suggestions.",
			"When enabled IntelliSense shows `field`-suggestions.",
			"When enabled IntelliSense shows `variable`-suggestions.",
			"When enabled IntelliSense shows `class`-suggestions.",
			"When enabled IntelliSense shows `struct`-suggestions.",
			"When enabled IntelliSense shows `interface`-suggestions.",
			"When enabled IntelliSense shows `module`-suggestions.",
			"When enabled IntelliSense shows `property`-suggestions.",
			"When enabled IntelliSense shows `event`-suggestions.",
			"When enabled IntelliSense shows `operator`-suggestions.",
			"When enabled IntelliSense shows `unit`-suggestions.",
			"When enabled IntelliSense shows `value`-suggestions.",
			"When enabled IntelliSense shows `constant`-suggestions.",
			"When enabled IntelliSense shows `enum`-suggestions.",
			"When enabled IntelliSense shows `enumMember`-suggestions.",
			"When enabled IntelliSense shows `keyword`-suggestions.",
			"When enabled IntelliSense shows `text`-suggestions.",
			"When enabled IntelliSense shows `color`-suggestions.",
			"When enabled IntelliSense shows `file`-suggestions.",
			"When enabled IntelliSense shows `reference`-suggestions.",
			"When enabled IntelliSense shows `customcolor`-suggestions.",
			"When enabled IntelliSense shows `folder`-suggestions.",
			"When enabled IntelliSense shows `typeParameter`-suggestions.",
			"When enabled IntelliSense shows `snippet`-suggestions.",
			"When enabled IntelliSense shows `user`-suggestions.",
			"When enabled IntelliSense shows `issues`-suggestions.",
			"Whether leading and trailing whitespace should always be selected.",
			"Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.",
			"Only accept a suggestion with `Enter` when it makes a textual change.",
			"Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.",
			"Controls the number of lines in the editor that can be read out by a screen reader at once. When we detect a screen reader we automatically set the default to be 500. Warning: this has a performance implication for numbers larger than the default.",
			"Editor content",
			"Use language configurations to determine when to autoclose brackets.",
			"Autoclose brackets only when the cursor is to the left of whitespace.",
			"Controls whether the editor should automatically close brackets after the user adds an opening bracket.",
			"Remove adjacent closing quotes or brackets only if they were automatically inserted.",
			"Controls whether the editor should remove adjacent closing quotes or brackets when deleting.",
			"Type over closing quotes or brackets only if they were automatically inserted.",
			"Controls whether the editor should type over closing quotes or brackets.",
			"Use language configurations to determine when to autoclose quotes.",
			"Autoclose quotes only when the cursor is to the left of whitespace.",
			"Controls whether the editor should automatically close quotes after the user adds an opening quote.",
			"The editor will not insert indentation automatically.",
			"The editor will keep the current line's indentation.",
			"The editor will keep the current line's indentation and honor language defined brackets.",
			"The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages.",
			"The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages.",
			"Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.",
			"Use language configurations to determine when to automatically surround selections.",
			"Surround with quotes but not brackets.",
			"Surround with brackets but not quotes.",
			"Controls whether the editor should automatically surround selections when typing quotes or brackets.",
			"Emulate selection behavior of tab characters when using spaces for indentation. Selection will stick to tab stops.",
			"Controls whether the editor shows CodeLens.",
			"Controls the font family for CodeLens.",
			"Controls the font size in pixels for CodeLens. When set to `0`, the 90% of `#editor.fontSize#` is used.",
			"Controls whether the editor should render the inline color decorators and color picker.",
			"Enable that the selection with the mouse and keys is doing column selection.",
			"Controls whether syntax highlighting should be copied into the clipboard.",
			"Control the cursor animation style.",
			"Controls whether the smooth caret animation should be enabled.",
			"Controls the cursor style.",
			"Controls the minimal number of visible leading and trailing lines surrounding the cursor. Known as 'scrollOff' or 'scrollOffset' in some other editors.",
			"`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.",
			"`cursorSurroundingLines` is enforced always.",
			"Controls when `cursorSurroundingLines` should be enforced.",
			"Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.",
			"Controls whether the editor should allow moving selections via drag and drop.",
			"Scrolling speed multiplier when pressing `Alt`.",
			"Controls whether the editor has code folding enabled.",
			"Use a language-specific folding strategy if available, else the indentation-based one.",
			"Use the indentation-based folding strategy.",
			"Controls the strategy for computing folding ranges.",
			"Controls whether the editor should highlight folded ranges.",
			"Controls whether clicking on the empty content after a folded line will unfold the line.",
			"Controls the font family.",
			"Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.",
			"Controls whether the editor should automatically format the line after typing.",
			"Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.",
			"Controls whether the cursor should be hidden in the overview ruler.",
			"Controls whether the editor should highlight the active indent guide.",
			"Controls the letter spacing in pixels.",
			"Controls whether the editor has linked editing enabled. Depending on the language, related symbols, e.g. HTML tags, are updated while editing.",
			"Controls whether the editor should detect links and make them clickable.",
			"Highlight matching brackets.",
			"A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
			"Zoom the font of the editor when using mouse wheel and holding `Ctrl`.",
			"Merge multiple cursors when they are overlapping.",
			"Maps to `Control` on Windows and Linux and to `Command` on macOS.",
			"Maps to `Alt` on Windows and Linux and to `Option` on macOS.",
			"The modifier to be used to add multiple cursors with the mouse. The Go To Definition and Open Link mouse gestures will adapt such that they do not conflict with the multicursor modifier. [Read more](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).",
			"Each cursor pastes a single line of the text.",
			"Each cursor pastes the full text.",
			"Controls pasting when the line count of the pasted text matches the cursor count.",
			"Controls whether the editor should highlight semantic symbol occurrences.",
			"Controls whether a border should be drawn around the overview ruler.",
			"Focus the tree when opening peek",
			"Focus the editor when opening peek",
			"Controls whether to focus the inline editor or the tree in the peek widget.",
			"Controls whether the Go to Definition mouse gesture always opens the peek widget.",
			"Controls the delay in milliseconds after which quick suggestions will show up.",
			"Controls whether the editor auto renames on type.",
			"Deprecated, use `editor.linkedEditing` instead.",
			"Controls whether the editor should render control characters.",
			"Controls whether the editor should render indent guides.",
			"Render last line number when the file ends with a newline.",
			"Highlights both the gutter and the current line.",
			"Controls how the editor should render the current line highlight.",
			"Controls if the editor should render the current line highlight only when the editor is focused.",
			"Render whitespace characters except for single spaces between words.",
			"Render whitespace characters only on selected text.",
			"Render only trailing whitespace characters.",
			"Controls how the editor should render whitespace characters.",
			"Controls whether selections should have rounded corners.",
			"Controls the number of extra characters beyond which the editor will scroll horizontally.",
			"Controls whether the editor will scroll beyond the last line.",
			"Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.",
			"Controls whether the Linux primary clipboard should be supported.",
			"Controls whether the editor should highlight matches similar to the selection.",
			"Always show the folding controls.",
			"Only show the folding controls when the mouse is over the gutter.",
			"Controls when the folding controls on the gutter are shown.",
			"Controls fading out of unused code.",
			"Controls strikethrough deprecated variables.",
			"Show snippet suggestions on top of other suggestions.",
			"Show snippet suggestions below other suggestions.",
			"Show snippets suggestions with other suggestions.",
			"Do not show snippet suggestions.",
			"Controls whether snippets are shown with other suggestions and how they are sorted.",
			"Controls whether the editor will scroll using an animation.",
			"Font size for the suggest widget. When set to `0`, the value of `#editor.fontSize#` is used.",
			"Line height for the suggest widget. When set to `0`, the value of `#editor.lineHeight#` is used. The minimum value is 8.",
			"Controls whether suggestions should automatically show up when typing trigger characters.",
			"Always select the first suggestion.",
			"Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.",
			"Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`.",
			"Controls how suggestions are pre-selected when showing the suggest list.",
			"Tab complete will insert the best matching suggestion when pressing tab.",
			"Disable tab completions.",
			"Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled.",
			"Enables tab completions.",
			"Unusual line terminators are automatically removed.",
			"Unusual line terminators are ignored.",
			"Unusual line terminators prompt to be removed.",
			"Remove unusual line terminators that might cause problems.",
			"Inserting and deleting whitespace follows tab stops.",
			"Characters that will be used as word separators when doing word related navigations or operations.",
			"Lines will never wrap.",
			"Lines will wrap at the viewport width.",
			"Lines will wrap at `#editor.wordWrapColumn#`.",
			"Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`.",
			"Controls how lines should wrap.",
			"Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.",
			"No indentation. Wrapped lines begin at column 1.",
			"Wrapped lines get the same indentation as the parent.",
			"Wrapped lines get +1 indentation toward the parent.",
			"Wrapped lines get +2 indentation toward the parent.",
			"Controls the indentation of wrapped lines.",
			"Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.",
			"Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases.",
			"Controls the algorithm that computes wrapping points."
		],
		"vs/platform/terminal/node/terminalProcess": [
			"Starting directory (cwd) \"{0}\" is not a directory",
			"Starting directory (cwd) \"{0}\" does not exist",
			"Path to shell executable \"{0}\" is not a file of a symlink",
			"Path to shell executable \"{0}\" does not exist"
		],
		"vs/base/common/errorMessage": [
			"{0}: {1}",
			"A system error occurred ({0})",
			"An unknown error occurred. Please consult the log for more details.",
			"An unknown error occurred. Please consult the log for more details.",
			"{0} ({1} errors in total)",
			"An unknown error occurred. Please consult the log for more details."
		],
		"vs/platform/configuration/common/configurationRegistry": [
			"Default Language Configuration Overrides",
			"Configure settings to be overridden for {0} language.",
			"Configure editor settings to be overridden for a language.",
			"This setting does not support per-language configuration.",
			"Cannot register an empty property",
			"Cannot register '{0}'. This matches property pattern '\\\\[.*\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.",
			"Cannot register '{0}'. This property is already registered."
		],
		"vs/platform/extensions/common/extensionValidator": [
			"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.",
			"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.",
			"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.",
			"Extension is not compatible with Code {0}. Extension requires: {1}."
		],
		"vs/base/node/zip": [
			"Error extracting {0}. Invalid file.",
			"Incomplete. Found {0} of {1} entries",
			"{0} not found inside zip."
		],
		"vs/platform/extensionManagement/node/extensionManagementUtil": [
			"VSIX invalid: package.json is not a JSON file."
		],
		"vs/platform/extensionManagement/node/extensionsScanner": [
			"Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again",
			"Cannot read the extension from {0}",
			"Cannot read the extension from {0}",
			"Unknown error while renaming {0} to {1}",
			"Extension invalid: package.json is not a JSON file."
		],
		"vs/platform/files/common/io": [
			"To open a file of this size, you need to restart and allow {0} to use more memory",
			"File is too large to open"
		],
		"vs/workbench/services/extensions/node/extensionPoints": [
			"Invalid manifest file {0}: Not an JSON object.",
			"Failed to parse {0}: [{1}, {2}] {3}.",
			"Cannot read file {0}: {1}.",
			"Failed to parse {0}: {1}.",
			"Invalid format {0}: JSON object expected.",
			"Couldn't find message for key {0}.",
			"Extension version is not semver compatible.",
			"Got empty extension description",
			"property publisher must be of type `string`.",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `object`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` can be omitted or must be of type `string[]`",
			"property `{0}` can be omitted or must be of type `string[]`",
			"properties `{0}` and `{1}` must both be specified or must both be omitted",
			"property `{0}` can be omitted or must be of type `string`",
			"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.",
			"properties `{0}` and `{1}` must both be specified or must both be omitted",
			"property `{0}` can be omitted or must be of type `string`",
			"Expected `browser` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.",
			"properties `{0}` and `{1}` must both be specified or must both be omitted"
		],
		"vs/workbench/services/configurationResolver/common/variableResolver": [
			"Variable {0} can not be resolved. Please open an editor.",
			"Variable {0}: can not find workspace folder of '{1}'.",
			"Variable {0} can not be resolved. No such folder '{1}'.",
			"Variable {0} can not be resolved in a multi folder workspace. Scope this variable using ':' and a workspace folder name.",
			"Variable {0} can not be resolved. Please open a folder.",
			"Variable {0} can not be resolved because no environment variable name is given.",
			"Variable {0} can not be resolved because setting '{1}' not found.",
			"Variable {0} can not be resolved because '{1}' is a structured value.",
			"Variable {0} can not be resolved because no settings name is given.",
			"Variable {0} can not be resolved. Make sure to have a line selected in the active editor.",
			"Variable {0} can not be resolved. Make sure to have some text selected in the active editor.",
			"Variable {0} can not be resolved because the command has no value."
		],
		"vs/workbench/common/editor": [
			"Text Editor",
			"Built-in",
			"Whether the active editor is dirty",
			"Whether the active editor is not in preview mode",
			"Whether the active editor is pinned",
			"Whether the active editor is readonly",
			"Whether the active editor can revert",
			"The identifier of the active editor",
			"The available editor identifiers that are usable for the active editor",
			"Whether a text compare editor is visible",
			"Whether a text compare editor is active",
			"The number of opened editor groups",
			"Whether the active editor group is empty",
			"The index of the active editor group",
			"Whether the active editor group is the last group",
			"Whether there are multiple editor groups opened",
			"Whether an editor is open",
			"Whether Zen mode is enabled",
			"Whether centered layout is enabled",
			"Whether editors split vertically",
			"Whether the editor area is visible"
		],
		"vs/platform/terminal/common/terminalPlatformConfiguration": [
			"An optional set of arguments to run the shell executable with.",
			"Controls whether or not the profile name overrides the auto detected one.",
			"A codicon ID to associate with this terminal.",
			"A theme color ID to associate with this terminal.",
			"An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
			"A single path to a shell executable or an array of paths that will be used as fallbacks when one fails.",
			"This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in {0} and setting its profile name as the default in {1}. This will currently take priority over the new profiles settings but that will change in the future.",
			"This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in {0} and setting its profile name as the default in {1}. This will currently take priority over the new profiles settings but that will change in the future.",
			"This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in {0} and setting its profile name as the default in {1}. This will currently take priority over the new profiles settings but that will change in the future.",
			"Integrated Terminal",
			"A path that when set will override {0} and ignore {1} values for automation-related terminal usage like tasks and debug.",
			"A path that when set will override {0} and ignore {1} values for automation-related terminal usage like tasks and debug.",
			"A path that when set will override {0} and ignore {1} values for automation-related terminal usage like tasks and debug.",
			"The path of the shell that the terminal uses on Linux. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).",
			"The path of the shell that the terminal uses on macOS. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).",
			"The path of the shell that the terminal uses on Windows. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).",
			"The command line arguments to use when on the Linux terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).",
			"The command line arguments to use when on the macOS terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).",
			"The command line arguments to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).",
			"The command line arguments to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).",
			"The command line arguments in [command-line format](https://msdn.microsoft.com/en-au/08dfcab2-eb6e-49a4-80eb-87d4076c98c6) to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).",
			"The Windows profiles to present when creating a new terminal via the terminal dropdown. Set to null to exclude them, use the {0} property to use the default detected configuration. Or, set the {1} and optional {2}",
			"A profile source that will auto detect the paths to the shell.",
			"The macOS profiles to present when creating a new terminal via the terminal dropdown. When set, these will override the default detected profiles. They are comprised of a {0} and optional {1}",
			"The Linux profiles to present when creating a new terminal via the terminal dropdown. When set, these will override the default detected profiles. They are comprised of a {0} and optional {1}",
			"Controls whether or not WSL distros are shown in the terminal dropdown",
			"Whether new shells should inherit their environment from VS Code which may source a login shell to ensure $PATH and other development variables are initialized. This has no effect on Windows.",
			"Whether to show hovers for links in the terminal output.",
			"Integrated Terminal",
			"The default profile used on Linux. This setting will currently be ignored if either {0} or {1} are set.",
			"The default profile used on macOS. This setting will currently be ignored if either {0} or {1} are set.",
			"The default profile used on Windows. This setting will currently be ignored if either {0} or {1} are set."
		],
		"vs/workbench/api/common/extHostExtensionService": [
			"Cannot load test runner.",
			"Path {0} does not point to a valid extension test runner."
		],
		"vs/workbench/api/common/extHostTerminalService": [
			"Could not find the terminal with id {0} on the extension host"
		],
		"vs/workbench/api/common/extHostWorkspace": [
			"Extension '{0}' failed to update workspace folders: {1}"
		],
		"vs/workbench/api/node/extHostDebugService": [
			"Debug Process"
		],
		"vs/platform/environment/node/argvHelper": [
			"Warning: '{0}' is not in the list of known options, but still passed to Electron/Chromium.",
			"Option '{0}' is defined more than once. Using value '{1}.'",
			"Arguments in `--goto` mode should be in the format of `FILE(:LINE(:CHARACTER))`."
		],
		"vs/base/common/date": [
			"in {0}",
			"now",
			"{0} sec ago",
			"{0} secs ago",
			"{0} sec",
			"{0} secs",
			"{0} min ago",
			"{0} mins ago",
			"{0} min",
			"{0} mins",
			"{0} hr ago",
			"{0} hrs ago",
			"{0} hr",
			"{0} hrs",
			"{0} day ago",
			"{0} days ago",
			"{0} day",
			"{0} days",
			"{0} wk ago",
			"{0} wks ago",
			"{0} wk",
			"{0} wks",
			"{0} mo ago",
			"{0} mos ago",
			"{0} mo",
			"{0} mos",
			"{0} yr ago",
			"{0} yrs ago",
			"{0} yr",
			"{0} yrs"
		],
		"vs/base/common/jsonErrorMessages": [
			"Invalid symbol",
			"Invalid number format",
			"Property name expected",
			"Value expected",
			"Colon expected",
			"Comma expected",
			"Closing brace expected",
			"Closing bracket expected",
			"End of file expected"
		],
		"vs/platform/workspaces/common/workspaces": [
			"Code Workspace"
		],
		"vs/workbench/contrib/tasks/common/taskService": [
			"Whether CustomExecution tasks are supported. Consider using in the when clause of a 'taskDefinition' contribution.",
			"Whether ShellExecution tasks are supported. Consider using in the when clause of a 'taskDefinition' contribution.",
			"Whether ProcessExecution tasks are supported. Consider using in the when clause of a 'taskDefinition' contribution."
		],
		"vs/workbench/contrib/debug/common/abstractDebugAdapter": [
			"Timeout after {0} ms for '{1}'"
		],
		"vs/workbench/contrib/debug/node/debugAdapter": [
			"Debug adapter executable '{0}' does not exist.",
			"Cannot determine executable for debug adapter '{0}'.",
			"Unable to launch debug adapter from '{0}'.",
			"Unable to launch debug adapter."
		],
		"vs/workbench/contrib/search/common/queryBuilder": [
			"Workspace folder does not exist: {0}"
		],
		"vs/platform/markers/common/markers": [
			"Error",
			"Warning",
			"Info"
		],
		"vs/platform/externalTerminal/node/externalTerminalService": [
			"VS Code Console",
			"Script '{0}' failed with exit code {1}",
			"'{0}' not supported",
			"Press any key to continue...",
			"'{0}' failed with exit code {1}",
			"can't find terminal application '{0}'"
		],
		"vs/workbench/api/common/extHostDiagnostics": [
			"Not showing {0} further errors and warnings."
		],
		"vs/workbench/api/common/extHostProgress": [
			"{0} (Extension)"
		],
		"vs/workbench/api/common/extHostStatusBar": [
			"{0} (Extension)",
			"Extension Status"
		],
		"vs/workbench/api/common/extHostTreeViews": [
			"No tree view with id '{0}' registered.",
			"No tree view with id '{0}' registered.",
			"No tree view with id '{0}' registered.",
			"No tree view with id '{0}' registered.",
			"No tree view with id '{0}' registered.",
			"No tree view with id '{0}' registered.",
			"No tree view with id '{0}' registered.",
			"Element with id {0} is already registered"
		]
	},
	"bundles": {
		"vs/server/remoteExtensionHostAgent": [
			"vs/base/common/date",
			"vs/base/common/errorMessage",
			"vs/base/common/jsonErrorMessages",
			"vs/base/node/processes",
			"vs/base/node/zip",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/environment/node/argv",
			"vs/platform/environment/node/argvHelper",
			"vs/platform/extensionManagement/common/extensionManagement",
			"vs/platform/extensionManagement/common/extensionManagementCLIService",
			"vs/platform/extensionManagement/node/extensionManagementService",
			"vs/platform/extensionManagement/node/extensionManagementUtil",
			"vs/platform/extensionManagement/node/extensionsScanner",
			"vs/platform/extensions/common/extensionValidator",
			"vs/platform/files/common/fileService",
			"vs/platform/files/common/files",
			"vs/platform/files/common/io",
			"vs/platform/files/node/diskFileSystemProvider",
			"vs/platform/markers/common/markers",
			"vs/platform/request/common/request",
			"vs/platform/telemetry/common/telemetryService",
			"vs/platform/terminal/common/terminalPlatformConfiguration",
			"vs/platform/workspaces/common/workspaces",
			"vs/server/remoteAgentEnvironmentImpl",
			"vs/server/serverEnvironmentService",
			"vs/workbench/common/editor",
			"vs/workbench/services/configurationResolver/common/variableResolver",
			"vs/workbench/services/extensions/node/extensionPoints"
		],
		"vs/server/remoteCli": [
			"vs/platform/environment/node/argv"
		],
		"vs/server/remoteExtensionHostProcess": [
			"vs/base/common/date",
			"vs/base/common/errorMessage",
			"vs/base/node/processes",
			"vs/editor/common/config/editorOptions",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/extensionManagement/common/extensionManagement",
			"vs/platform/extensions/common/extensionValidator",
			"vs/platform/externalTerminal/node/externalTerminalService",
			"vs/platform/files/common/files",
			"vs/platform/markers/common/markers",
			"vs/platform/workspaces/common/workspaces",
			"vs/workbench/api/common/extHostDiagnostics",
			"vs/workbench/api/common/extHostExtensionService",
			"vs/workbench/api/common/extHostProgress",
			"vs/workbench/api/common/extHostStatusBar",
			"vs/workbench/api/common/extHostTerminalService",
			"vs/workbench/api/common/extHostTreeViews",
			"vs/workbench/api/common/extHostWorkspace",
			"vs/workbench/api/node/extHostDebugService",
			"vs/workbench/common/editor",
			"vs/workbench/contrib/debug/common/abstractDebugAdapter",
			"vs/workbench/contrib/debug/node/debugAdapter",
			"vs/workbench/contrib/search/common/queryBuilder",
			"vs/workbench/contrib/tasks/common/taskService",
			"vs/workbench/services/configurationResolver/common/variableResolver"
		],
		"vs/platform/files/node/watcher/unix/watcherApp": [
			"vs/base/node/processes",
			"vs/platform/files/common/files"
		],
		"vs/platform/files/node/watcher/nsfw/watcherApp": [
			"vs/base/node/processes",
			"vs/platform/files/common/files"
		],
		"vs/platform/terminal/node/ptyHostMain": [
			"vs/base/common/errorMessage",
			"vs/base/node/processes",
			"vs/platform/terminal/node/terminalProcess"
		]
	}
}